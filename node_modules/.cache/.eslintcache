[{"C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\index.js":"1","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\reportWebVitals.js":"2","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\App.js":"3","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\cart.js":"4","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\classic.js":"5","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\strawberryPage.js":"6","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\shop-context.js":"7","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\home.js":"8","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\fruit.js":"9","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\candy.js":"10","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\checkout.js":"11","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\specialEdition.js":"12","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\addToCartPage.js":"13","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\shibaPage.js":"14","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\orangePage.js":"15","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\order.js":"16","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\header.js":"17","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\scroll-to-top.js":"18","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\slideshow.js":"19"},{"size":1727,"mtime":1689019897539,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":1687892086418,"results":"22","hashOfConfig":"21"},{"size":187,"mtime":1688453619877,"results":"23","hashOfConfig":"21"},{"size":8087,"mtime":1688691226933,"results":"24","hashOfConfig":"21"},{"size":3093,"mtime":1689020373614,"results":"25","hashOfConfig":"21"},{"size":13368,"mtime":1688453628934,"results":"26","hashOfConfig":"21"},{"size":2812,"mtime":1689049877129,"results":"27","hashOfConfig":"21"},{"size":2673,"mtime":1689051637772,"results":"28","hashOfConfig":"21"},{"size":3238,"mtime":1689018974904,"results":"29","hashOfConfig":"21"},{"size":3084,"mtime":1689022151280,"results":"30","hashOfConfig":"21"},{"size":7674,"mtime":1689052201784,"results":"31","hashOfConfig":"21"},{"size":3106,"mtime":1689020158273,"results":"32","hashOfConfig":"21"},{"size":3665,"mtime":1688453615155,"results":"33","hashOfConfig":"21"},{"size":12919,"mtime":1689053205502,"results":"34","hashOfConfig":"21"},{"size":12896,"mtime":1689019517226,"results":"35","hashOfConfig":"21"},{"size":3843,"mtime":1688708927275,"results":"36","hashOfConfig":"21"},{"size":833,"mtime":1689052318362,"results":"37","hashOfConfig":"21"},{"size":255,"mtime":1688101081286,"results":"38","hashOfConfig":"21"},{"size":2035,"mtime":1689019941975,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},"1gkfigy",{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},{"filePath":"91","messages":"92","suppressedMessages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","suppressedMessages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98"},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},"C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\index.js",["114"],[],"import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {\n  createBrowserRouter,\n  RouterProvider,\n} from \"react-router-dom\";\nimport homePage from './home';\nimport StrawberryPage from './strawberryPage';\nimport FruitPage from './fruit';\nimport SpecialPage from './specialEdition';\nimport ClassicPage from './classic';\nimport CandyPage from './candy';\nimport Cart from './cart';\nimport {ShopContextProvider} from './shop-context';\nimport CartAddPage from './addToCartPage';\nimport {Checkout} from './checkout';\nimport {OrderPage} from './order';\nimport OrangePage from './orangePage';\nimport ShibaPage from './shibaPage';\n\nconst router = createBrowserRouter([\n  {\n    path: \"/\",\n    element: <App/>,\n  },\n  {\n    path: \"/strawberryPage\",\n    element: <StrawberryPage/>,\n  },\n  {\n    path: \"/fruit\",\n    element: <FruitPage/>,\n  },\n  {\n    path: \"/specialEdition\",\n    element: <SpecialPage/>,\n  },\n  {\n    path: \"/classic\",\n    element: <ClassicPage/>,\n  },\n  {\n    path: \"/candy\",\n    element: <CandyPage/>,\n  },\n  {\n    path: \"/cart\",\n    element: <Cart/>,\n  },\n  {\n    path: \"/addToCartPage\",\n    element: <CartAddPage/>,\n  },\n  {\n    path: \"/checkout\",\n    element: <Checkout/>,\n  },\n  {\n    path: \"/order\",\n    element: <OrderPage/>,\n  },\n  {\n    path: \"/orangePage\",\n    element: <OrangePage/>,\n  },\n  {\n    path: \"/shibaPage\",\n    element: <ShibaPage/>,\n  },\n]);\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <ShopContextProvider>\n        <RouterProvider router={router} />\n    </ShopContextProvider>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\reportWebVitals.js",[],[],"C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\App.js",["115"],[],"import logo from './logo.svg';\nimport './App.css';\nimport React from 'react';\nimport HomePage from './home';\n\n\n\nconst App = () => {\n  return (\n    <HomePage/>\n  );\n}\n\nexport default App;\n","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\cart.js",["116","117","118","119"],[],"import React, {useRef, useState, useEffect, useContext} from 'react';\r\nimport './App.css';\r\nimport HeaderBar from './header';\r\nimport './ppage.css';\r\nimport './cart.css';\r\nimport ScrollToTop from './scroll-to-top';\r\nimport { ShopContext } from './shop-context';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst CartItem = (props) => {\r\n    const {DecreaseQuantity, IncreaseQuantity, calculateTotalPrice, RemoveFromCart} = useContext(ShopContext);\r\n      \r\n    const cartDecreaseQuantity=()=>{\r\n        \r\n        if(props.quantity > 1){\r\n            DecreaseQuantity(props.id);\r\n        }\r\n    }\r\n\r\n    const cartIncreaseQuantity=()=>{\r\n        IncreaseQuantity(props.id);\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"cart-page-item\" style={{'text-decoration': 'none'}}>\r\n            <div>\r\n                <img className=\"cart-page-item-img\" src={props.img}></img>\r\n            </div>\r\n            <div className=\"cart-page-item-info\">\r\n                <Link to={props.link} style={{'color':'black'}}>\r\n                    <h2>{props.name}</h2>\r\n                    <h4>{props.set}</h4>\r\n                    <p>${props.price}</p>\r\n                </Link>\r\n                \r\n                \r\n            </div>\r\n            <div className=\"cart-page-item-qty\">\r\n                    <div style={{'display':'flex', 'gap':'10px','align-items':'center'}}>\r\n                        <p>Qty:</p>\r\n                        <button className=\"cart-quantity-button\" onClick={() => {cartDecreaseQuantity()}}>-</button>\r\n                        <p style={{'text-align':'center'}}>{props.quantity}</p>\r\n                        <button className=\"cart-quantity-button\" onClick={() => {cartIncreaseQuantity()}}>+</button>\r\n                    </div>\r\n                    <button className=\"cart-remove-button\" onClick={() => {RemoveFromCart(props.id)}}>Remove</button>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport const Cart = () => {\r\n    \r\n    const {cartItems} = useContext(ShopContext);\r\n    const {TotalPrice} = useContext(ShopContext);\r\n    const {setDeliveryState} = useContext(ShopContext);\r\n\r\n    const [price, setPrice] = useState(TotalPrice);\r\n    const [deliveryStyle, setDeliStyle] = useState({div1:false, div2:true});\r\n    const [deliveryPrice, setDeliveryPrice] = useState(0);\r\n    const [disabled, setDisabled] = useState(true);\r\n\r\n    \r\n    function changeDeliveryFee(dprice){\r\n        if(TotalPrice !== 0){\r\n            setPrice(TotalPrice + dprice);\r\n        }else{\r\n            setPrice(0);\r\n        }\r\n    }\r\n    \r\n    function DeliSelected(divName){\r\n        if(deliveryStyle[divName] !== true || divName === 'div1'){\r\n            if(deliveryStyle[divName] === true || divName === 'div2'){\r\n                handleDeliveryClick(divName);\r\n                setDeliveryPrice(0);\r\n                changeDeliveryFee(-10);\r\n                setDeliStyle({div2: true});\r\n                setDeliveryState(false);\r\n            }else{\r\n                setDeliStyle({div1: false, div2: false});\r\n                handleDeliveryClick(divName);\r\n                setDeliveryPrice(10);\r\n                changeDeliveryFee(10);\r\n                setDeliveryState(true);\r\n            }\r\n        }\r\n    \r\n    }\r\n\r\n    function getCurrentDate(separator='/'){\r\n\r\n        let newDate = new Date()\r\n        let date = newDate.getDate()+7;\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        \r\n        return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date<10?`0${date}`:`${date}`}`\r\n        }\r\n\r\n    const handleDeliveryClick = (divName) => {\r\n        \r\n        setDeliStyle((prevState) => ({\r\n          ...prevState,\r\n          [divName]: !prevState[divName],\r\n        }));\r\n      };\r\n    \r\n    useEffect(() => {\r\n        setPrice(TotalPrice+deliveryPrice);\r\n        if(cartItems.length === 0){\r\n            setDisabled(true);\r\n        }else{\r\n            setDisabled(false);\r\n        }\r\n    }, [TotalPrice, deliveryPrice]);\r\n\r\n\r\n    return(\r\n        <div className='cartpage'>\r\n            <HeaderBar/>\r\n            <h1 style={{'margin-left':'7%'}}>Cart</h1>\r\n            <div style={{'display':'flex','flexDirection':'row', 'flexWrap':'wrap', 'justify-content':'space-between'}}>\r\n                <div className='cart-item-list'>\r\n                    {cartItems.map((item) => {\r\n                        return(\r\n                            <CartItem\r\n                                name={item.name}\r\n                                img={item.img}\r\n                                price={item.price}\r\n                                set={item.set}\r\n                                quantity={item.quantity}\r\n                                id={item.id}\r\n                                link={item.link}\r\n                            />\r\n                        )\r\n                    })}\r\n                </div>\r\n                <div style={{'width':'500px', 'min-width':'300px', 'margin-right':'3%'}}>\r\n                    \r\n                    <div style={{'display':'flex', 'flex-direction':'column', 'gap':'20px', 'align-items':'center'}}>\r\n                        <div\r\n                            className={`delivery-box ${deliveryStyle.div1 ? 'active' : ''}`}\r\n                            onClick={() => DeliSelected('div1',10)}\r\n                            >\r\n                                <div>\r\n                                    <p><b>Delivery</b></p>\r\n                                    <p>Est. Delivery Date: {getCurrentDate()}</p>\r\n                                </div>\r\n                                <p>$10</p>\r\n                        </div>\r\n                        <div\r\n                            className={`delivery-box ${deliveryStyle.div2 ? 'active' : ''}`}\r\n                            onClick={() =>{DeliSelected('div2',0)}}\r\n                            >   \r\n                                <div>\r\n                                    <p><b>Pick up</b></p>\r\n                                    <p>Pick up Location: My house lol</p>\r\n                                </div>\r\n                                \r\n                                <p>Free</p>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{'display':'flex', 'flexDirection':'column', 'alignItems':'center'}}>\r\n                        <div className=\"cart-page-price\">\r\n                            <div style={{'display':'flex', 'justify-content':'space-between'}}>\r\n                                <div>Subtotal</div>\r\n                                <div>${TotalPrice}</div>\r\n                            </div>\r\n                            <div style={{'display':'flex', 'justify-content':'space-between'}}>\r\n                                <div>Delivery Fee</div>\r\n                                <div>${deliveryPrice}</div>\r\n                            </div>\r\n                            <hr></hr>\r\n                            <div style={{'display':'flex', 'justify-content':'space-between'}}>\r\n                                <div><b>Total</b></div>\r\n                                <div>${price}</div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className=\"cart-page-checkout\" style={{'display':'flex','align-items':'center','justify-content':'center','margin-bottom':'10%','width':'100%'}}>\r\n                            <Link to=\"/checkout\" style={{'text-decoration':'none', 'width':'100%'}}>\r\n                                <button \r\n                                className={`cart-page-checkout-button ${disabled ? 'active' : ''}`} \r\n                                disabled={disabled}\r\n                                onClick={() => {setDeliveryState(deliveryStyle.div1)}}\r\n                                >Checkout</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            \r\n            <ScrollToTop/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Cart;","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\classic.js",["120","121"],[],"import React, {useEffect, useRef} from 'react';\r\nimport './App.css';\r\nimport HeaderBar from './header';\r\nimport './categoryPage.css';\r\nimport {motion, useAnimation} from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport {Product} from './home';\r\nimport ScrollToTop from './scroll-to-top';\r\n\r\nconst ClassicDango = (prod) => {\r\n    return(\r\n        <div className='prod-page'>  \r\n            <div className='fruit-img-container'>\r\n                <img src={prod.source} className='prod-cat-img'></img>\r\n                <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1}}>\r\n                <h1 className='cat-title'>Classic Dango</h1>\r\n                </motion.div>\r\n                <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1, delay:0.5}}>\r\n                <p className='cat-thumb-description'>Timeless Original Classics </p>\r\n                </motion.div>\r\n                <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1, delay:1}}>\r\n                <a href='#category-contents' id='shop'><p>Shop&gt;</p></a>\r\n                </motion.div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst ClassicPage = () => {\r\n    const [ref, isInView] = useInView();\r\n\r\n    const mainControls = useAnimation(); \r\n\r\n    useEffect(() => {\r\n        if(isInView){\r\n            mainControls.start('visible');\r\n        }\r\n    }, [mainControls, isInView]);\r\n\r\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n        anchor.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n    \r\n            document.querySelector(this.getAttribute('href')).scrollIntoView({\r\n                behavior: 'smooth'\r\n            });\r\n        });\r\n    });\r\n\r\n    return(\r\n        <div className='Category-page' >\r\n            <HeaderBar/>\r\n            <ClassicDango source='classic.jpg'/>\r\n            <motion.div\r\n                variants={{\r\n                    hidden:{opacity:0, x:-75},\r\n                    visible:{opacity:1, x:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                ref={ref}\r\n                transition={{duration:0.5, delay:0.25}}\r\n            >\r\n                <h2 style={{'margin-left':'5%'}}>Shop Classic Dango</h2>\r\n            </motion.div>\r\n            \r\n            <motion.div\r\n                variants={{\r\n                    hidden:{opacity:0, y:75},\r\n                    visible:{opacity:1, y:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                className='category-contents'\r\n                id='category-contents'\r\n                ref={ref}\r\n                transition={{duration:0.5, delay:0.25}}\r\n            >\r\n                <Product name={'Shiba Dango'} description={'Tastes great'} image={'shibaDango.jpg'} path={'/shibaPage'}/>\r\n            </motion.div>\r\n            <ScrollToTop/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ClassicPage;","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\strawberryPage.js",["122","123","124","125","126","127","128","129"],[],"import React, {useRef, useState, useEffect, useContext} from 'react';\r\nimport './App.css';\r\nimport HeaderBar from './header';\r\nimport './ppage.css';\r\nimport ScrollToTop from './scroll-to-top';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { motion, useAnimation, useMotionValue, useTransform } from 'framer-motion';\r\nimport {cartQuantity, changeCartQuantity} from './cart.js';\r\nimport {ShopContext} from './shop-context';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const ChangeCartQuantity = ({handleCartQ}) => {\r\n    handleCartQ();\r\n}\r\n\r\n\r\nconst StrawberryPage = () => {\r\n\r\n    const [style, setStyle] = useState({div1:false, div2:false, div3:false, div4:false});\r\n    const [price, setPrice] = useState(0);\r\n    const [quantity, setQuantity] = useState( 1);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [itemId, setItemId] = useState(0);\r\n    \r\n    const {AddToCart}= useContext(ShopContext);\r\n    let selectedPrice = useRef(null);\r\n    var url = window.location.pathname;\r\n    var filename = '/'+url.substring(url.lastIndexOf('/')+1);\r\n\r\n    function getSelectedSet(){\r\n        if(style.div1 === true){\r\n            setItemId(1);\r\n            return 'Single';\r\n        }else if(style.div2 === true){\r\n            setItemId(2);\r\n            return 'Set of 3';\r\n        }else if(style.div3 === true){\r\n            setItemId(3);\r\n            return 'Set of 5';\r\n        }else if(style.div4 === true){\r\n            setItemId(4);\r\n            return 'Luxury Set';\r\n        }else{\r\n            return 'None';\r\n        }\r\n    }\r\n\r\n    function CartItem(quantity, price, name, set, img, filename){\r\n        this.quantity = quantity;\r\n        this.price = price/quantity;\r\n        this.name = name;\r\n        this.set = set;\r\n        this.img = img;\r\n        this.id = 'Strawberry'+ set;\r\n        this.link = filename;\r\n    }\r\n\r\n    \r\n\r\n    function AddItemToCart(){\r\n        let cartItem = new CartItem(quantity, price, 'Strawberry Dango', getSelectedSet(), 'starwberrydango.jpg', filename);\r\n        AddToCart(cartItem);\r\n    }\r\n    \r\n    function changePrice(NewPrice){\r\n        setPrice(quantity*NewPrice);\r\n    }\r\n\r\n    function ResetPrice(){\r\n        setPrice(0);\r\n    }\r\n\r\n    function Selected(divName, NewPrice){\r\n        \r\n        if(style[divName] === true){\r\n            handleDivClick(divName);\r\n            selectedPrice.current = 0;\r\n            setQuantity(1);\r\n            changePrice(0);\r\n            setDisabled(true);\r\n            \r\n        }else{\r\n            selectedPrice.current = NewPrice;\r\n            setStyle({div1: false, div2: false, div3:false, div4:false});\r\n            ResetPrice();\r\n            handleDivClick(divName);\r\n            changePrice(NewPrice);\r\n            setDisabled(false);\r\n        } \r\n    \r\n    }\r\n\r\n    const handleDivClick = (divName) => {\r\n        \r\n        setStyle((prevState) => ({\r\n          ...prevState,\r\n          [divName]: !prevState[divName],\r\n        }));\r\n      };\r\n    \r\n\r\n    useEffect(() => {\r\n        changePrice(selectedPrice.current);\r\n    }, [quantity]);\r\n  \r\n    const DecreaseQuantity=()=>{\r\n        \r\n        if(quantity > 1){\r\n            setQuantity(prevQuantity => prevQuantity - 1);\r\n            \r\n        }\r\n    }\r\n\r\n    const IncreaseQuantity=()=>{\r\n        if(style.div1 === true || style.div2 === true || style.div3 === true || style.div4 === true){\r\n            setQuantity(prevQuantity => prevQuantity + 1);\r\n        }\r\n    }\r\n\r\n    const [ref, isInView] = useInView();\r\n    const mainControls = useAnimation(); \r\n\r\n    useEffect(() => {\r\n        if(isInView){\r\n            mainControls.start('visible');\r\n        }\r\n    }, [mainControls, isInView]);\r\n\r\n    const [ref1, isInView1] = useInView();\r\n\r\n    const mainControls1 = useAnimation(); \r\n\r\n    useEffect(() => {\r\n        if(isInView1){\r\n            mainControls1.start('visible');\r\n        }\r\n    }, [mainControls1, isInView1]);\r\n\r\n    const [ref2, isInView2] = useInView();\r\n    const mainControls2 = useAnimation(); \r\n\r\n    useEffect(() => {\r\n        if(isInView2){\r\n            mainControls2.start('visible');\r\n        }\r\n    }, [mainControls2, isInView2]);\r\n\r\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n        anchor.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n    \r\n            document.querySelector(this.getAttribute('href')).scrollIntoView({\r\n                behavior: 'smooth'\r\n            });\r\n        });\r\n    });\r\n\r\n    return(\r\n        <div className='productpage'>\r\n            <HeaderBar/>\r\n            <div className='product-page-container'>\r\n                \r\n                <motion.div\r\n                variants={{\r\n                    hidden:{opacity:0, x:-75},\r\n                    visible:{opacity:1, x:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                ref={ref}\r\n                transition={{duration:0.5}}\r\n                >\r\n                    <img src='starwberrydango.jpg' className='ppage-img'></img>\r\n                </motion.div>\r\n                <motion.div  \r\n                variants={{\r\n                    hidden:{opacity:0, x:75},\r\n                    visible:{opacity:1, x:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                ref={ref}\r\n                transition={{duration:0.5}}\r\n                className='ppage-description'>\r\n                    <h1 style={{'line-height':'0px'}}>Strawberry Dango</h1>\r\n                    <p style={{'font-size':'20px'}}>Starting at $5</p>\r\n                    <h3 style={{'padding-top':'50px'}}>Select Set. <a href='#whats-in-box'>What's in the box?</a></h3>\r\n                    <div className='options'>\r\n                        <div\r\n                            className={`option-box ${style.div1 ? 'active' : ''}`}\r\n                            onClick={() => Selected('div1',5)}\r\n                            >\r\n                                <p><b>Single</b></p>\r\n                                <p>$5</p>\r\n                        </div>\r\n                        <div\r\n                            className={`option-box ${style.div2 ? 'active' : ''}`}\r\n                            onClick={() => Selected('div2',10)}\r\n                            >\r\n                                <p><b>Set of 3</b></p>\r\n                                <p>$10</p>\r\n                        </div>\r\n                        <div\r\n                            className={`option-box ${style.div3 ? 'active' : ''}`}\r\n                            onClick={() => Selected('div3',12)}\r\n                            >\r\n                                <p><b>Set of 5</b></p>\r\n                                <p>$12</p>\r\n                        </div>\r\n                        <div\r\n                            className={`option-box ${style.div4 ? 'active' : ''}`}\r\n                            onClick={() => Selected('div4',19)}\r\n                            >\r\n                                <p><b>Luxury Set</b></p>\r\n                                <p>$19</p>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{'display':'grid', 'grid-template-rows':'80% 10% 10%'}}>\r\n                        <div style={{'display':'grid', 'grid-template-rows':'50% 50%','margin-bottom':'10px'}}>\r\n                            \r\n                            <div style={{'display':'flex', 'justify-content':'space-between', 'margin-right':'15%'}}>\r\n                                <h3>Quantity</h3>\r\n                                <div style={{'display':'flex', 'gap':'40px','align-items':'center'}}>\r\n                                    <button className=\"quantity-button\" onClick={() => {DecreaseQuantity()}}>-</button>\r\n                                    <p style={{'text-align':'center'}}>{quantity}</p>\r\n                                    <button className=\"quantity-button\" onClick={() => {IncreaseQuantity()}}>+</button>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{'display':'flex','align-items':'flex-end','justify-content':'flex-end','margin-right':'15%'}}>\r\n                                <p style={{'font-size':'18px'}}><b>Total:</b> ${price}</p>\r\n                            </div>\r\n                        </div>\r\n                        <Link to ='/addToCartPage'>\r\n                            <motion.button whileTap={{ scale: 0.8 }} className={`add-to-cart ${disabled ? 'active' : ''}`} disabled={disabled} onClick={() => {AddItemToCart()}}>Add to Cart</motion.button>\r\n                        </Link>\r\n                    </div>\r\n                    \r\n                </motion.div>\r\n            </div>\r\n            <div className='ppage-marketing' style={{'background-color':'pink'}}>\r\n                    <motion.div \r\n                        variants={{\r\n                            hidden:{opacity:0, x:-75},\r\n                            visible:{opacity:1, x:0},\r\n                        }}\r\n                        initial='hidden'\r\n                        animate={mainControls1}\r\n                        className='ppage-marketing-description'\r\n                        ref={ref1}\r\n                        transition={{duration:0.5}}\r\n                    >\r\n                        <h1>Strawberry Dango</h1>\r\n                        <h3>Experience Dango with the freshness of Strawberry</h3>\r\n                        <p>Inspired by a street vendor in Kyoto, Strawberry Dango combines the chewy soft texture of Dango with the fresh taste\r\n                            of Strawberry. With hand-picked strawberries from local farms around Ottawa and exquisitely crafted dango balls, this pink dessert is the perfect combination of sweet and sour. \r\n                            Strawberry Dango is a must try for any Dango lover or anyone who wants to try something new.\r\n                        </p>\r\n                            \r\n                    </motion.div>\r\n                    <motion.div\r\n                        variants={{\r\n                            hidden:{opacity:0, x:75},\r\n                            visible:{opacity:1, x:0},\r\n                        }}\r\n                        initial='hidden'\r\n                        animate={mainControls1}\r\n                        className='ppage-marketing-img'\r\n                        ref={ref1}\r\n                        transition={{duration:0.5}}\r\n                    >\r\n                        <img src='starwberrydango.jpg' className='ppage-marketing-img'></img>\r\n                    </motion.div>\r\n                    <ScrollToTop/>\r\n            </div>\r\n            <div className='whats-in-box' id='whats-in-box'>\r\n                <motion.div\r\n                    variants={{\r\n                        hidden:{opacity:0, y:75},\r\n                        visible:{opacity:1, y:0},\r\n                    }}\r\n                    initial='hidden'\r\n                    animate={mainControls2}\r\n                    style={{'text-align':'center'}}\r\n                    ref={ref2}\r\n                    transition={{duration:0.5}}\r\n                >\r\n                <h1>What's in the Box?</h1>\r\n                </motion.div>\r\n                <motion.div\r\n                    variants={{\r\n                        hidden:{opacity:0, y:75},\r\n                        visible:{opacity:1, y:0},\r\n                    }}\r\n                    initial='hidden'\r\n                    animate={mainControls2}\r\n                    style={{'display':'grid', 'grid-template-columns':'repeat(4, 1fr)', 'gap':'5%'}}\r\n                    ref={ref2}\r\n                    transition={{duration:0.5, delay:0.25}}\r\n                >\r\n                    <div>\r\n                        <h3>Single</h3>\r\n                        <ul>\r\n                            <li>1x Classic Strawberry Dango</li>\r\n                            <li>Basic Packaging</li>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <h3>Set of 3</h3>\r\n                        <ul>\r\n                            <li>3x Classic Strawberry Dango</li>\r\n                            <li>Basic Packaging signed by the Chef</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3>Set of 5</h3>\r\n                        <ul>\r\n                            <li>5x Classic Strawberry Dango</li>\r\n                            <li>Basic Packaging signed by the Chef</li>\r\n                            <li>Chocolate-dipped strawberries</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3>Luxury Set</h3>\r\n                        <ul>\r\n                            <li>1x Classic Strawberry Dango</li>\r\n                            <li>1x Specialized Strawberry-Banana Dango</li>\r\n                            <li>1x Mystery Strawberry Dango Variation</li>\r\n                            <li>Chocolate-dipped strawberries</li>\r\n                            <li>Luxurious Packaging autographed by the Chef</li>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                </motion.div>\r\n            </div>\r\n            <ScrollToTop/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default StrawberryPage;","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\shop-context.js",["130"],[],"import React, {createContext, useEffect, useState} from \"react\";\r\n\r\nexport const ShopContext = createContext(null);\r\n\r\nexport const ShopContextProvider = (props) => {\r\n    const [cartItems, setCartItems] = useState([]);\r\n    const [lastCartItem, setLastCartItem] = useState({'item':'Why would u refresh the page lol', 'quantity':'69'}); // [0, 1, 2, 3, 4, 5, 6, 7, 8, 9\r\n    const [TotalPrice, setTotalPrice] = useState(0);\r\n    const [deliveryState, setDeliveryState] = useState(false);\r\n    const [error , setError] = useState(false);\r\n    const [address, setAddress] = useState('');\r\n    const [name, setName] = useState('');\r\n    // useEffect = () => {\r\n    //     console.log(cartItems);\r\n    // }\r\n\r\n    const CartLength =  cartItems.length;\r\n\r\n    useEffect(() => {\r\n        calculateTotalPrice();\r\n    }, [cartItems]);\r\n\r\n    function DecreaseQuantity(item){\r\n        for(let i = 0; i < cartItems.length; i++){\r\n            if(cartItems[i].id === item){\r\n                cartItems[i].quantity -= 1;\r\n                setCartItems([...cartItems]);\r\n                calculateTotalPrice();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    function IncreaseQuantity(item){\r\n        for(let i = 0; i < cartItems.length; i++){\r\n            if(cartItems[i].id === item){\r\n                cartItems[i].quantity += 1;\r\n                setCartItems([...cartItems]);\r\n                calculateTotalPrice();\r\n                return;\r\n            }\r\n        }\r\n    }\r\n\r\n    function calculateTotalPrice(){\r\n        let total = 0;\r\n        for(let i = 0; i < cartItems.length; i++){\r\n            total += cartItems[i].price * cartItems[i].quantity;\r\n        }\r\n        setTotalPrice(total);\r\n    }\r\n\r\n    const AddToCart = (item) =>{\r\n        for(let i = 0; i < cartItems.length; i++){\r\n            if(cartItems[i].id === item.id){\r\n                cartItems[i].quantity += item.quantity;\r\n                setLastCartItem(item);\r\n                calculateTotalPrice();\r\n                return;\r\n            }\r\n        }\r\n        setCartItems([...cartItems, item]);\r\n        setLastCartItem(item);\r\n        calculateTotalPrice();\r\n    }\r\n\r\nfunction RemoveFromCart(item){\r\n    for(let i = 0; i < cartItems.length; i++){\r\n        if(cartItems[i].id === item){\r\n            cartItems.splice(i, 1);\r\n            setCartItems([...cartItems]);\r\n            calculateTotalPrice();\r\n            return;\r\n        }\r\n    }\r\n}\r\n\r\n    const contextValue = {cartItems, setCartItems, CartLength, AddToCart, lastCartItem, DecreaseQuantity, \r\n        IncreaseQuantity, TotalPrice, calculateTotalPrice, RemoveFromCart, setDeliveryState, \r\n        deliveryState, error, setError, address, setAddress, name, setName};\r\n    \r\n    return <ShopContext.Provider value={contextValue}>{props.children}</ShopContext.Provider>;\r\n};","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\home.js",["131","132","133","134","135"],[],"import React, {useRef, useEffect} from 'react';\r\nimport './App.css';\r\nimport Slideshow from './slideshow';\r\nimport HeaderBar from './header';\r\nimport { Link } from \"react-router-dom\";\r\nimport { motion, useAnimation} from 'framer-motion';\r\nimport { useInView } from \"react-intersection-observer\";\r\n\r\nconst products = [''];\r\n\r\nexport const Product = (prods) => {\r\n    return(\r\n      <motion.div whileHover={{ scale:1.1}}>\r\n        <Link to={prods.path} style={{  'text-decoration': 'none'}}>\r\n          <div className='product-container'>\r\n            <img className = \"product-image\" src={prods.image}></img>\r\n            <h1 style={{'font-size':'24px'}}>{prods.name}</h1>\r\n            <p>{prods.description}</p>\r\n          </div>\r\n        </Link>\r\n      </motion.div>\r\n    );\r\n}\r\n\r\nconst Category = (cats) => {\r\n    \r\n    return(\r\n      <motion.div whileHover={{ scale:1.1}}>\r\n        <Link to={cats.path}>\r\n          <div className='category-container'>\r\n            <img className = \"category-image\" src={cats.image}></img>\r\n          </div>\r\n        </Link>\r\n      </motion.div>\r\n      );\r\n      \r\n    \r\n}\r\n\r\nfunction HomePage(){\r\n    const controls = useAnimation();\r\n    const [ref, inView] = useInView();\r\n\r\n    useEffect(() => {\r\n        if(inView){\r\n            controls.start('visible');\r\n        }\r\n    }, [controls, inView]);\r\n\r\n    return(\r\n    <div className='home' >\r\n        <HeaderBar/>\r\n        <Slideshow />\r\n        <div className=\"contents\">\r\n          <div className='New'>\r\n            <h2 style={{'text-align':'center', 'font-size':'30px', 'color':'white'}}>New Arrivals</h2>\r\n            <div style={{'display': 'flex','justify-content':'center', 'gap':'40px','margin-left':'5%', 'margin-bottom':'20px', 'margin-right':'5%'}}>  \r\n              <Product name={'Strawberry Dango'} description={'Tastes great'} image={'starwberrydango.jpg'} path={'/strawberryPage'}/>\r\n              <Product name={'Orange Dango'} description={'Tastes great'} image={'orangedango.jpg'} path={'/orangePage'}/>\r\n              <Product name={'Shiba Dango'} description={'Tastes great'} image={'shibaDango.jpg'} path={'/shibaPage'}/>\r\n            </div>\r\n          </div>\r\n            <h2 style={{'text-align':'center', 'font-size':'30px', 'margin-bottom':'40px'}}>Categories</h2>\r\n            <div className='category'>\r\n                <Category image='Fruit.png' path='/fruit'/>\r\n                <Category image='Candy.png' path='/candy'/>\r\n                <Category image='Classic.png' path='/classic'/>\r\n                <Category image='specialedition.png' path='/specialEdition'/>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    );\r\n}\r\n\r\nexport default HomePage;","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\fruit.js",["136","137"],[],"import React, {useEffect, useRef} from 'react';\r\nimport './App.css';\r\nimport HeaderBar from './header';\r\nimport './categoryPage.css';\r\nimport {motion, useAnimation} from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport {Product} from './home';\r\nimport ScrollToTop from './scroll-to-top';\r\n\r\nconst FruitDango = (prod) => {\r\n    return(\r\n        <div className='prod-page'>  \r\n            <div className='fruit-img-container'>\r\n                <img src={prod.source} className='prod-cat-img'></img>\r\n                <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1}}>\r\n                <h1 className='cat-title'>Fruit x Dango</h1>\r\n                </motion.div>\r\n                <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1, delay:0.5}}>\r\n                <p className='cat-thumb-description'>Fresh. Fruity. Fun.</p>\r\n                </motion.div>\r\n                <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1, delay:1}}>\r\n                <a href='#category-contents' id='shop'><p>Shop&gt;</p></a>\r\n                </motion.div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst FruitPage = () => {\r\n    const [ref, isInView] = useInView();\r\n\r\n    const mainControls = useAnimation(); \r\n\r\n    useEffect(() => {\r\n        if(isInView){\r\n            mainControls.start('visible');\r\n        }\r\n    }, [mainControls, isInView]);\r\n\r\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n        anchor.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n    \r\n            document.querySelector(this.getAttribute('href')).scrollIntoView({\r\n                behavior: 'smooth'\r\n            });\r\n        });\r\n    });\r\n\r\n    return(\r\n        <div className='Category-page' >\r\n            <HeaderBar/>\r\n            <FruitDango source='fruittumbnail.jpg'/>\r\n            <motion.div\r\n                variants={{\r\n                    hidden:{opacity:0, x:-75},\r\n                    visible:{opacity:1, x:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                ref={ref}\r\n                transition={{duration:0.5, delay:0.25}}\r\n            >\r\n                <h2 style={{'margin-left':'5%'}}>Shop Fruit Dango</h2>\r\n            </motion.div>\r\n            \r\n            <motion.div\r\n                variants={{\r\n                    hidden:{opacity:0, y:75},\r\n                    visible:{opacity:1, y:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                className='category-contents'\r\n                id='category-contents'\r\n                ref={ref}\r\n                transition={{duration:0.5, delay:0.25}}\r\n            >\r\n                <Product name={'Strawberry Dango'} description={'Tastes great'} image={'starwberrydango.jpg'} path={'/strawberryPage'}/>                \r\n                <Product name={'Orange Dango'} description={'Tastes great'} image={'orangedango.jpg'} path={'/orangePage'}/>\r\n            </motion.div>\r\n            <ScrollToTop/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default FruitPage;","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\candy.js",["138","139"],[],"import React, {useEffect, useRef} from 'react';\r\nimport './App.css';\r\nimport HeaderBar from './header';\r\nimport './categoryPage.css';\r\nimport {motion, useAnimation} from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport {Product} from './home';\r\nimport ScrollToTop from './scroll-to-top';\r\n\r\nconst CandyDango = (prod) => {\r\n    return(\r\n        <div className='prod-page'>  \r\n            <div className='fruit-img-container'>\r\n                <img src={prod.source} className='prod-cat-img'></img>\r\n                <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1}}>\r\n                <h1 className='cat-title'>Candy Dango</h1>\r\n                </motion.div>\r\n                <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1, delay:0.5}}>\r\n                <p className='cat-thumb-description'>Engineered for the Original High</p>\r\n                </motion.div>\r\n                <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1, delay:1}}>\r\n                <a href='#category-contents' id='shop'><p>Shop&gt;</p></a>\r\n                </motion.div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst CandyPage = () => {\r\n    const [ref, isInView] = useInView();\r\n\r\n    const mainControls = useAnimation(); \r\n\r\n    useEffect(() => {\r\n        if(isInView){\r\n            mainControls.start('visible');\r\n        }\r\n    }, [mainControls, isInView]);\r\n\r\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n        anchor.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n    \r\n            document.querySelector(this.getAttribute('href')).scrollIntoView({\r\n                behavior: 'smooth'\r\n            });\r\n        });\r\n    });\r\n\r\n    return(\r\n        <div className='Category-page' >\r\n            <HeaderBar/>\r\n            <CandyDango source='candy.jpg'/>\r\n            <motion.div\r\n                variants={{\r\n                    hidden:{opacity:0, x:-75},\r\n                    visible:{opacity:1, x:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                ref={ref}\r\n                transition={{duration:0.5, delay:0.25}}\r\n            >\r\n                <h2 style={{'margin-left':'5%'}}>Shop Candy Dango</h2>\r\n            </motion.div>\r\n            \r\n            <motion.div\r\n                variants={{\r\n                    hidden:{opacity:0, y:75},\r\n                    visible:{opacity:1, y:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                className='category-contents'\r\n                id='category-contents'\r\n                ref={ref}\r\n                transition={{duration:0.5, delay:0.25}}\r\n            >\r\n                <Product name={'Shiba Dango'} description={'Tastes great'} image={'shibaDango.jpg'} path={'/shibaPage'}/>\r\n            </motion.div>\r\n            <ScrollToTop/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CandyPage;","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\checkout.js",["140","141","142","143","144","145","146","147"],[],"import React, {useRef, useState, useEffect, useContext} from 'react';\r\nimport './App.css';\r\nimport './checkout.css'\r\nimport HeaderBar from './header';\r\nimport ScrollToTop from './scroll-to-top';\r\nimport { ShopContext } from './shop-context';\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\n\r\n\r\n\r\n\r\nconst Delivery = (props) => {\r\n    \r\n    const{error, setError, address, setAddress, name, setName} = useContext(ShopContext);\r\n\r\n    return(\r\n        <div className=\"delivery-option\">\r\n            <h1>Delivery Information</h1>\r\n            <div className=\"delivery-option-info\">\r\n                <div>\r\n                    <h3>Shipping Address</h3>\r\n                    <input className='input' onChange={e => setAddress(e.target.value)}></input>\r\n                </div>\r\n                {error && address.length<=0?\r\n                <label>Enter a valid address</label>:''}\r\n                <div>\r\n                    <h3>Name</h3>\r\n                    <input className='input' onChange={e => setName(e.target.value)}></input>\r\n                </div>\r\n                {error && name.length<=0?\r\n                <label>Enter a valid name</label>:''}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Pickup = (props) => {\r\n    function getCurrentDate(separator='/'){\r\n\r\n        let newDate = new Date()\r\n        let date = newDate.getDate()+7;\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        \r\n        return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date<10?`0${date}`:`${date}`}`\r\n    }\r\n\r\n    return(\r\n        <div className=\"pickup-option\">\r\n            <h1>Pickup Information</h1>\r\n            <p>Pickup address is 299 Brambling Way. Order will be ready on {getCurrentDate()}</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst OrderItem = (props) => {\r\n    const {DecreaseQuantity, IncreaseQuantity, calculateTotalPrice, RemoveFromCart} = useContext(ShopContext);\r\n      \r\n    return(\r\n        <div className=\"order-page-item\" style={{'text-decoration': 'none'}}>\r\n            <div>\r\n                <img className=\"order-page-item-img\" src={props.img}></img>\r\n            </div>\r\n            <div className=\"order-page-item-info\">\r\n                <Link to={props.link} style={{'color':'black'}}>\r\n                    <h3>{props.name}</h3>\r\n                    <h5>{props.set}</h5>\r\n                    <p>${props.price}</p>\r\n                </Link>\r\n            </div>\r\n            <div className=\"order-page-item-qty\">\r\n                    <div style={{'display':'flex', 'gap':'10px','align-items':'center'}}>\r\n                        <p>Qty:</p>\r\n                        <p style={{'text-align':'center'}}>{props.quantity}</p>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\n\r\nexport const Checkout = () => {\r\n    \r\n    const {cartItems, setCartItems} = useContext(ShopContext);\r\n    const {TotalPrice} = useContext(ShopContext);\r\n    const {deliveryState} = useContext(ShopContext);\r\n    const [delivery, setDelivery] = useState(0);\r\n    const{error, setError, address, name} = useContext(ShopContext);\r\n    const [Billing, setBilling] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    \r\n    var d;\r\n\r\n    useEffect(() => {\r\n        if(deliveryState){\r\n            d = <Delivery/>;\r\n            setDelivery(10);\r\n        }else{\r\n            d = <Pickup/>;\r\n            setDelivery(0);\r\n        }\r\n    }, [deliveryState]);\r\n\r\n    if(deliveryState){\r\n        d = <Delivery/>;\r\n    }else{\r\n        d = <Pickup/>;\r\n    }\r\n\r\n    const HandleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if(deliveryState){\r\n            if(address.length<=0 || name.length<=0 || Billing.length<=0 || !Billing.includes('@') || !Billing.includes('.') || cartItems.length<=0){\r\n                setError(true);\r\n            }else{\r\n                navigate(\"/order\");\r\n                setCartItems([]);\r\n        }\r\n        }else{\r\n            if(Billing.length<=0 || !Billing.includes('@') || !Billing.includes('.') || cartItems.length<=0){\r\n                setError(true);\r\n            }else{\r\n                navigate(\"/order\");\r\n                setCartItems([]);\r\n            }\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className='checkoutpage'>\r\n            <HeaderBar/>\r\n            <div className=\"checkoutpage-content\">\r\n                <div className=\"checkoutpage-content-left\">\r\n                    {d} \r\n                    <div style={{'margin-left':'5%'}}>\r\n                        <h1>Billing</h1>\r\n                        <p>E-Transfer me. I'm too lazy to set up the whole banking thing lol.</p>\r\n                        <h4>Payment Email</h4>\r\n                        <div>\r\n                            <h3>Email</h3>\r\n                            <input className='input' onChange={e => setBilling(e.target.value)}></input>\r\n                        </div>\r\n                        {error && (Billing.length<=0|| !Billing.includes('@') || !Billing.includes('.'))?\r\n                        <label>Enter a valid e-transfer email</label>:''}\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"checkoutpage-content-right\">\r\n                    <h1>Order Summary</h1>\r\n                    <div className='order-items'>\r\n                        {cartItems.map((item) => {\r\n                            return(\r\n                                <OrderItem\r\n                                    name={item.name}\r\n                                    img={item.img}\r\n                                    price={item.price}\r\n                                    set={item.set}\r\n                                    quantity={item.quantity}\r\n                                    id={item.id}\r\n                                    link={item.link}\r\n                                />\r\n                            )\r\n                        })}\r\n                    </div>\r\n                    <div style={{'display':'flex', 'flexDirection':'column', 'alignItems':'right'}}>\r\n                        <div className=\"order-page-price\">\r\n                            <div style={{'display':'flex', 'justify-content':'space-between'}}>\r\n                                <div>Subtotal</div>\r\n                                <div>${TotalPrice}</div>\r\n                            </div>\r\n                            <div style={{'display':'flex', 'justify-content':'space-between'}}>\r\n                                <div>Delivery Fee</div>\r\n                                <div>${delivery}</div>\r\n                            </div>\r\n                            <hr></hr>\r\n                            <div style={{'display':'flex', 'justify-content':'space-between'}}>\r\n                                <div><b>Total</b></div>\r\n                                <div>${TotalPrice+delivery}</div>\r\n                            </div>\r\n                            \r\n                        </div>\r\n                        <div className=\"cart-page-checkout\" style={{'display':'flex','align-items':'center','justify-content':'center','margin-bottom':'10%','width':'100%'}}>\r\n                            <Link to=\"/\" style={{'text-decoration':'none', 'width':'100%'}}>\r\n                                <button \r\n                                className={'order-page-checkout-button'} \r\n                                onClick={HandleSubmit}\r\n                                >Order</button>\r\n                            </Link>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            \r\n            <ScrollToTop/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Checkout;","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\specialEdition.js",["148","149"],[],"import React, {useEffect, useRef} from 'react';\r\nimport './App.css';\r\nimport HeaderBar from './header';\r\nimport './categoryPage.css';\r\nimport {motion, useAnimation} from \"framer-motion\";\r\nimport { useInView } from \"react-intersection-observer\";\r\nimport {Product} from './home';\r\nimport ScrollToTop from './scroll-to-top';\r\n\r\nconst SpecialDango = (prod) => {\r\n    return(\r\n        <div className='prod-page'>  \r\n            <div className='fruit-img-container'>\r\n                <img src={prod.source} className='prod-cat-img'></img>\r\n                <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1}}>\r\n                <h1 className='cat-title'>Special Edition Dango</h1>\r\n                </motion.div>\r\n                <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1, delay:0.5}}>\r\n                <p className='cat-thumb-description'>Hand-crafted Luxury Dango</p>\r\n                </motion.div>\r\n                <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1, delay:1}}>\r\n                <a href='#category-contents' id='shop'><p>Shop&gt;</p></a>\r\n                </motion.div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nconst SpecialPage = () => {\r\n    const [ref, isInView] = useInView();\r\n\r\n    const mainControls = useAnimation(); \r\n\r\n    useEffect(() => {\r\n        if(isInView){\r\n            mainControls.start('visible');\r\n        }\r\n    }, [mainControls, isInView]);\r\n\r\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n        anchor.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n    \r\n            document.querySelector(this.getAttribute('href')).scrollIntoView({\r\n                behavior: 'smooth'\r\n            });\r\n        });\r\n    });\r\n\r\n    return(\r\n        <div className='Category-page' >\r\n            <HeaderBar/>\r\n            <SpecialDango source='luxury.jpg'/>\r\n            <motion.div\r\n                variants={{\r\n                    hidden:{opacity:0, x:-75},\r\n                    visible:{opacity:1, x:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                ref={ref}\r\n                transition={{duration:0.5, delay:0.25}}\r\n            >\r\n                <h2 style={{'margin-left':'5%'}}>Shop Special Edition Dango</h2>\r\n            </motion.div>\r\n            \r\n            <motion.div\r\n                variants={{\r\n                    hidden:{opacity:0, y:75},\r\n                    visible:{opacity:1, y:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                className='category-contents'\r\n                id='category-contents'\r\n                ref={ref}\r\n                transition={{duration:0.5, delay:0.25}}\r\n            >\r\n                <Product name={'Shiba Dango'} description={'Tastes great'} image={'shibaDango.jpg'} path={'/shibaPage'}/>\r\n            </motion.div>\r\n            <ScrollToTop/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SpecialPage;","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\addToCartPage.js",["150","151"],[],"import React, {useContext} from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { motion, useMotionValue, useTransform } from \"framer-motion\"\r\nimport \"./App.css\"\r\nimport \"./AddCartCSS.css\"\r\nimport HeaderBar from \"./header\"\r\nimport {Link} from \"react-router-dom\";\r\nimport {ShopContext} from './shop-context';\r\n\r\nfunction CircularProgress({ progress }) {\r\n  const circleLength = useTransform(progress, [0, 100], [0, 1])\r\n  const checkmarkPathLength = useTransform(progress, [0, 95, 100], [0, 0, 1])\r\n  const circleColor = useTransform(\r\n    progress,\r\n    [0, 95, 100],\r\n    [\"#FFCC66\", \"#FFCC66\", \"#66BB66\"]\r\n  )\r\n\r\n  return (\r\n    <motion.svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"258\"\r\n      height=\"258\"\r\n      viewBox=\"0 0 258 258\"\r\n    >\r\n      {/* Check mark  */}\r\n      <motion.path\r\n        transform=\"translate(60 85)\"\r\n        d=\"M3 50L45 92L134 3\"\r\n        fill=\"transparent\"\r\n        stroke=\"#7BB86F\"\r\n        strokeWidth={8}\r\n        style={{ pathLength: checkmarkPathLength }}\r\n      />\r\n      {/* Circle */}\r\n      <motion.path\r\n        d=\"M 130 6 C 198.483 6 254 61.517 254 130 C 254 198.483 198.483 254 130 254 C 61.517 254 6 198.483 6 130 C 6 61.517 61.517 6 130 6 Z\"\r\n        fill=\"transparent\"\r\n        strokeWidth=\"8\"\r\n        stroke={circleColor}\r\n        style={{\r\n          pathLength: circleLength\r\n        }}\r\n      />\r\n    </motion.svg>\r\n  )\r\n}\r\n\r\nfunction CartAddPage() {\r\n  let progress = useMotionValue(90)\r\n\r\n  const {lastCartItem} = useContext(ShopContext);\r\n\r\n  return (\r\n    <div className=\"CartAddPage-container\">\r\n        <HeaderBar/>\r\n        <div className=\"CartAddPage\">\r\n            <motion.div\r\n                initial={{ x: 0 }}\r\n                animate={{ x: 100 }}\r\n                style={{ x: progress }}\r\n                transition={{ duration: 0.5 }}\r\n            />\r\n            <CircularProgress progress={progress} />\r\n            <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1, delay:0.75}}>\r\n                <h1>Added to Cart!</h1>\r\n            </motion.div>\r\n\r\n            <motion.div \r\n              animate={{opacity:1}} \r\n              initial={{opacity:0}} \r\n              transition={{type:'tween', duration: 1, delay:1}}\r\n              className=\"added-item\"\r\n              >\r\n                <img src={lastCartItem.img} style={{\r\n                  'width':'75px',\r\n                  'height':'75px',\r\n                  'object-fit':'cover',\r\n                  'margin':'10px',\r\n                  'border-radius':'5px'\r\n                  }}></img>\r\n                <div className=\"added-item-info\">\r\n                  <h2>{lastCartItem.name}</h2>\r\n                  <div style={{'display':'flex', 'justify-content':'space-between'}}>\r\n                    <p>{lastCartItem.set}</p>\r\n                    <p>Qty: {lastCartItem.quantity}</p>\r\n                  </div>\r\n                </div>\r\n                \r\n                \r\n            </motion.div>\r\n            <motion.div \r\n                animate={{opacity:1}} \r\n                initial={{opacity:0}} \r\n                transition={{type:'tween', duration: 1, delay:1.25}}\r\n                className=\"CartAddPage-buttons-container\"\r\n            >   \r\n                <Link to='/'>\r\n                  <button className=\"CartAddPage-button\" style={{'background-color':'rgb(6, 85, 255)','color':'white'}}>Continue Shopping</button>\r\n                </Link>\r\n                <Link to='/cart'>\r\n                  <button className=\"CartAddPage-button\">Go to Cart</button>\r\n                </Link>\r\n            </motion.div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default CartAddPage;","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\shibaPage.js",["152","153","154","155","156","157","158","159"],[],"import React, {useRef, useState, useEffect, useContext} from 'react';\r\nimport './App.css';\r\nimport HeaderBar from './header';\r\nimport './ppage.css';\r\nimport ScrollToTop from './scroll-to-top';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { motion, useAnimation, useMotionValue, useTransform } from 'framer-motion';\r\nimport {cartQuantity, changeCartQuantity} from './cart.js';\r\nimport {ShopContext} from './shop-context';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const ChangeCartQuantity = ({handleCartQ}) => {\r\n    handleCartQ();\r\n}\r\n\r\n\r\nconst ShibaPage = () => {\r\n\r\n    const [style, setStyle] = useState({div1:false, div2:false, div3:false, div4:false});\r\n    const [price, setPrice] = useState(0);\r\n    const [quantity, setQuantity] = useState( 1);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [itemId, setItemId] = useState(0);\r\n    \r\n    const {AddToCart}= useContext(ShopContext);\r\n    let selectedPrice = useRef(null);\r\n    var url = window.location.pathname;\r\n    var filename = '/'+url.substring(url.lastIndexOf('/')+1);\r\n\r\n    function getSelectedSet(){\r\n        if(style.div1 === true){\r\n            setItemId(1);\r\n            return 'Single';\r\n        }else if(style.div2 === true){\r\n            setItemId(2);\r\n            return 'Set of 3';\r\n        }else if(style.div3 === true){\r\n            setItemId(3);\r\n            return 'Set of 5';\r\n        }else if(style.div4 === true){\r\n            setItemId(4);\r\n            return 'Luxury Set';\r\n        }else{\r\n            return 'None';\r\n        }\r\n    }\r\n\r\n    function CartItem(quantity, price, name, set, img, filename){\r\n        this.quantity = quantity;\r\n        this.price = price/quantity;\r\n        this.name = name;\r\n        this.set = set;\r\n        this.img = img;\r\n        this.id = 'Strawberry'+ set;\r\n        this.link = filename;\r\n    }\r\n\r\n    \r\n\r\n    function AddItemToCart(){\r\n        let cartItem = new CartItem(quantity, price, 'Shiba Inu Dango', getSelectedSet(), 'shibaDango.jpg', filename);\r\n        AddToCart(cartItem);\r\n    }\r\n    \r\n    function changePrice(NewPrice){\r\n        setPrice(quantity*NewPrice);\r\n    }\r\n\r\n    function ResetPrice(){\r\n        setPrice(0);\r\n    }\r\n\r\n    function Selected(divName, NewPrice){\r\n        \r\n        if(style[divName] === true){\r\n            handleDivClick(divName);\r\n            selectedPrice.current = 0;\r\n            setQuantity(1);\r\n            changePrice(0);\r\n            setDisabled(true);\r\n            \r\n        }else{\r\n            selectedPrice.current = NewPrice;\r\n            setStyle({div1: false, div2: false, div3:false, div4:false});\r\n            ResetPrice();\r\n            handleDivClick(divName);\r\n            changePrice(NewPrice);\r\n            setDisabled(false);\r\n        } \r\n    \r\n    }\r\n\r\n    const handleDivClick = (divName) => {\r\n        \r\n        setStyle((prevState) => ({\r\n          ...prevState,\r\n          [divName]: !prevState[divName],\r\n        }));\r\n      };\r\n    \r\n\r\n    useEffect(() => {\r\n        changePrice(selectedPrice.current);\r\n    }, [quantity]);\r\n  \r\n    const DecreaseQuantity=()=>{\r\n        \r\n        if(quantity > 1){\r\n            setQuantity(prevQuantity => prevQuantity - 1);\r\n            \r\n        }\r\n    }\r\n\r\n    const IncreaseQuantity=()=>{\r\n        if(style.div1 === true || style.div2 === true || style.div3 === true || style.div4 === true){\r\n            setQuantity(prevQuantity => prevQuantity + 1);\r\n        }\r\n    }\r\n\r\n    const [ref, isInView] = useInView();\r\n    const mainControls = useAnimation(); \r\n\r\n    useEffect(() => {\r\n        if(isInView){\r\n            mainControls.start('visible');\r\n        }\r\n    }, [mainControls, isInView]);\r\n\r\n    const [ref1, isInView1] = useInView();\r\n\r\n    const mainControls1 = useAnimation(); \r\n\r\n    useEffect(() => {\r\n        if(isInView1){\r\n            mainControls1.start('visible');\r\n        }\r\n    }, [mainControls1, isInView1]);\r\n\r\n    const [ref2, isInView2] = useInView();\r\n    const mainControls2 = useAnimation(); \r\n\r\n    useEffect(() => {\r\n        if(isInView2){\r\n            mainControls2.start('visible');\r\n        }\r\n    }, [mainControls2, isInView2]);\r\n\r\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n        anchor.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n    \r\n            document.querySelector(this.getAttribute('href')).scrollIntoView({\r\n                behavior: 'smooth'\r\n            });\r\n        });\r\n    });\r\n\r\n    return(\r\n        <div className='productpage'>\r\n            <HeaderBar/>\r\n            <div className='product-page-container'>\r\n                \r\n                <motion.div\r\n                variants={{\r\n                    hidden:{opacity:0, x:-75},\r\n                    visible:{opacity:1, x:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                ref={ref}\r\n                transition={{duration:0.5}}\r\n                >\r\n                    <img src='shibaDango.jpg' className='ppage-img'></img>\r\n                </motion.div>\r\n                <motion.div  \r\n                variants={{\r\n                    hidden:{opacity:0, x:75},\r\n                    visible:{opacity:1, x:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                ref={ref}\r\n                transition={{duration:0.5}}\r\n                className='ppage-description'>\r\n                    <h1 style={{'line-height':'0px'}}>Shiba Inu Dango</h1>\r\n                    <p style={{'font-size':'20px'}}>Starting at $5</p>\r\n                    <h3 style={{'padding-top':'50px'}}>Select Set. <a href='#whats-in-box'>What's in the box?</a></h3>\r\n                    <div className='options'>\r\n                        <div\r\n                            className={`option-box ${style.div1 ? 'active' : ''}`}\r\n                            onClick={() => Selected('div1',5)}\r\n                            >\r\n                                <p><b>Single</b></p>\r\n                                <p>$5</p>\r\n                        </div>\r\n                        <div\r\n                            className={`option-box ${style.div2 ? 'active' : ''}`}\r\n                            onClick={() => Selected('div2',10)}\r\n                            >\r\n                                <p><b>Set of 3</b></p>\r\n                                <p>$10</p>\r\n                        </div>\r\n                        <div\r\n                            className={`option-box ${style.div3 ? 'active' : ''}`}\r\n                            onClick={() => Selected('div3',12)}\r\n                            >\r\n                                <p><b>Set of 5</b></p>\r\n                                <p>$12</p>\r\n                        </div>\r\n                        <div\r\n                            className={`option-box ${style.div4 ? 'active' : ''}`}\r\n                            onClick={() => Selected('div4',19)}\r\n                            >\r\n                                <p><b>Luxury Set</b></p>\r\n                                <p>$19</p>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{'display':'grid', 'grid-template-rows':'80% 10% 10%'}}>\r\n                        <div style={{'display':'grid', 'grid-template-rows':'50% 50%','margin-bottom':'10px'}}>\r\n                            \r\n                            <div style={{'display':'flex', 'justify-content':'space-between', 'margin-right':'15%'}}>\r\n                                <h3>Quantity</h3>\r\n                                <div style={{'display':'flex', 'gap':'40px','align-items':'center'}}>\r\n                                    <button className=\"quantity-button\" onClick={() => {DecreaseQuantity()}}>-</button>\r\n                                    <p style={{'text-align':'center'}}>{quantity}</p>\r\n                                    <button className=\"quantity-button\" onClick={() => {IncreaseQuantity()}}>+</button>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{'display':'flex','align-items':'flex-end','justify-content':'flex-end','margin-right':'15%'}}>\r\n                                <p style={{'font-size':'18px'}}><b>Total:</b> ${price}</p>\r\n                            </div>\r\n                        </div>\r\n                        <Link to ='/addToCartPage'>\r\n                            <motion.button whileTap={{ scale: 0.8 }} className={`add-to-cart ${disabled ? 'active' : ''}`} disabled={disabled} onClick={() => {AddItemToCart()}}>Add to Cart</motion.button>\r\n                        </Link>\r\n                    </div>\r\n                    \r\n                </motion.div>\r\n            </div>\r\n            <div className='ppage-marketing' style={{'background-color':'beige'}}>\r\n                    <motion.div \r\n                        variants={{\r\n                            hidden:{opacity:0, x:-75},\r\n                            visible:{opacity:1, x:0},\r\n                        }}\r\n                        initial='hidden'\r\n                        animate={mainControls1}\r\n                        className='ppage-marketing-description'\r\n                        ref={ref1}\r\n                        transition={{duration:0.5}}\r\n                    >\r\n                        <h1>Shiba Inu Dango</h1>\r\n                        <h3>Experience Cuteness</h3>\r\n                        <p>Adorable dog dango inspired by those fluffy potatoes.\r\n                        </p>\r\n                            \r\n                    </motion.div>\r\n                    <motion.div\r\n                        variants={{\r\n                            hidden:{opacity:0, x:75},\r\n                            visible:{opacity:1, x:0},\r\n                        }}\r\n                        initial='hidden'\r\n                        animate={mainControls1}\r\n                        className='ppage-marketing-img'\r\n                        ref={ref1}\r\n                        transition={{duration:0.5}}\r\n                    >\r\n                        <img src='shibaDango.jpg' className='ppage-marketing-img'></img>\r\n                    </motion.div>\r\n                    <ScrollToTop/>\r\n            </div>\r\n            <div className='whats-in-box' id='whats-in-box'>\r\n                <motion.div\r\n                    variants={{\r\n                        hidden:{opacity:0, y:75},\r\n                        visible:{opacity:1, y:0},\r\n                    }}\r\n                    initial='hidden'\r\n                    animate={mainControls2}\r\n                    style={{'text-align':'center'}}\r\n                    ref={ref2}\r\n                    transition={{duration:0.5}}\r\n                >\r\n                <h1>What's in the Box?</h1>\r\n                </motion.div>\r\n                <motion.div\r\n                    variants={{\r\n                        hidden:{opacity:0, y:75},\r\n                        visible:{opacity:1, y:0},\r\n                    }}\r\n                    initial='hidden'\r\n                    animate={mainControls2}\r\n                    style={{'display':'grid', 'grid-template-columns':'repeat(4, 1fr)', 'gap':'5%'}}\r\n                    ref={ref2}\r\n                    transition={{duration:0.5, delay:0.25}}\r\n                >\r\n                    <div>\r\n                        <h3>Single</h3>\r\n                        <ul>\r\n                            <li>1x Classic Strawberry Dango</li>\r\n                            <li>Basic Packaging</li>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <h3>Set of 3</h3>\r\n                        <ul>\r\n                            <li>3x Classic Strawberry Dango</li>\r\n                            <li>Basic Packaging signed by the Chef</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3>Set of 5</h3>\r\n                        <ul>\r\n                            <li>5x Classic Strawberry Dango</li>\r\n                            <li>Basic Packaging signed by the Chef</li>\r\n                            <li>Chocolate-dipped strawberries</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3>Luxury Set</h3>\r\n                        <ul>\r\n                            <li>1x Classic Strawberry Dango</li>\r\n                            <li>1x Specialized Strawberry-Banana Dango</li>\r\n                            <li>1x Mystery Strawberry Dango Variation</li>\r\n                            <li>Chocolate-dipped strawberries</li>\r\n                            <li>Luxurious Packaging autographed by the Chef</li>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                </motion.div>\r\n            </div>\r\n            <ScrollToTop/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ShibaPage;","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\orangePage.js",["160","161","162","163","164","165","166","167"],[],"import React, {useRef, useState, useEffect, useContext} from 'react';\r\nimport './App.css';\r\nimport HeaderBar from './header';\r\nimport './ppage.css';\r\nimport ScrollToTop from './scroll-to-top';\r\nimport { useInView } from 'react-intersection-observer';\r\nimport { motion, useAnimation, useMotionValue, useTransform } from 'framer-motion';\r\nimport {cartQuantity, changeCartQuantity} from './cart.js';\r\nimport {ShopContext} from './shop-context';\r\nimport {Link} from 'react-router-dom';\r\n\r\nexport const ChangeCartQuantity = ({handleCartQ}) => {\r\n    handleCartQ();\r\n}\r\n\r\n\r\nexport const OrangePage = () => {\r\n\r\n    const [style, setStyle] = useState({div1:false, div2:false, div3:false, div4:false});\r\n    const [price, setPrice] = useState(0);\r\n    const [quantity, setQuantity] = useState( 1);\r\n    const [disabled, setDisabled] = useState(true);\r\n    const [itemId, setItemId] = useState(0);\r\n    \r\n    const {AddToCart}= useContext(ShopContext);\r\n    let selectedPrice = useRef(null);\r\n    var url = window.location.pathname;\r\n    var filename = '/'+url.substring(url.lastIndexOf('/')+1);\r\n\r\n    function getSelectedSet(){\r\n        if(style.div1 === true){\r\n            setItemId(1);\r\n            return 'Single';\r\n        }else if(style.div2 === true){\r\n            setItemId(2);\r\n            return 'Set of 3';\r\n        }else if(style.div3 === true){\r\n            setItemId(3);\r\n            return 'Set of 5';\r\n        }else if(style.div4 === true){\r\n            setItemId(4);\r\n            return 'Luxury Set';\r\n        }else{\r\n            return 'None';\r\n        }\r\n    }\r\n\r\n    function CartItem(quantity, price, name, set, img, filename){\r\n        this.quantity = quantity;\r\n        this.price = price/quantity;\r\n        this.name = name;\r\n        this.set = set;\r\n        this.img = img;\r\n        this.id = 'Orange'+ set;\r\n        this.link = filename;\r\n    }\r\n\r\n    \r\n\r\n    function AddItemToCart(){\r\n        let cartItem = new CartItem(quantity, price, 'Orange Dango', getSelectedSet(), 'orangedango.jpg', filename);\r\n        AddToCart(cartItem);\r\n    }\r\n    \r\n    function changePrice(NewPrice){\r\n        setPrice(quantity*NewPrice);\r\n    }\r\n\r\n    function ResetPrice(){\r\n        setPrice(0);\r\n    }\r\n\r\n    function Selected(divName, NewPrice){\r\n        \r\n        if(style[divName] === true){\r\n            handleDivClick(divName);\r\n            selectedPrice.current = 0;\r\n            setQuantity(1);\r\n            changePrice(0);\r\n            setDisabled(true);\r\n            \r\n        }else{\r\n            selectedPrice.current = NewPrice;\r\n            setStyle({div1: false, div2: false, div3:false, div4:false});\r\n            ResetPrice();\r\n            handleDivClick(divName);\r\n            changePrice(NewPrice);\r\n            setDisabled(false);\r\n        } \r\n    \r\n    }\r\n\r\n    const handleDivClick = (divName) => {\r\n        \r\n        setStyle((prevState) => ({\r\n          ...prevState,\r\n          [divName]: !prevState[divName],\r\n        }));\r\n      };\r\n    \r\n\r\n    useEffect(() => {\r\n        changePrice(selectedPrice.current);\r\n    }, [quantity]);\r\n  \r\n    const DecreaseQuantity=()=>{\r\n        \r\n        if(quantity > 1){\r\n            setQuantity(prevQuantity => prevQuantity - 1);\r\n            \r\n        }\r\n    }\r\n\r\n    const IncreaseQuantity=()=>{\r\n        if(style.div1 === true || style.div2 === true || style.div3 === true || style.div4 === true){\r\n            setQuantity(prevQuantity => prevQuantity + 1);\r\n        }\r\n    }\r\n\r\n    const [ref, isInView] = useInView();\r\n    const mainControls = useAnimation(); \r\n\r\n    useEffect(() => {\r\n        if(isInView){\r\n            mainControls.start('visible');\r\n        }\r\n    }, [mainControls, isInView]);\r\n\r\n    const [ref1, isInView1] = useInView();\r\n\r\n    const mainControls1 = useAnimation(); \r\n\r\n    useEffect(() => {\r\n        if(isInView1){\r\n            mainControls1.start('visible');\r\n        }\r\n    }, [mainControls1, isInView1]);\r\n\r\n    const [ref2, isInView2] = useInView();\r\n    const mainControls2 = useAnimation(); \r\n\r\n    useEffect(() => {\r\n        if(isInView2){\r\n            mainControls2.start('visible');\r\n        }\r\n    }, [mainControls2, isInView2]);\r\n\r\n    document.querySelectorAll('a[href^=\"#\"]').forEach(anchor => {\r\n        anchor.addEventListener('click', function (e) {\r\n            e.preventDefault();\r\n    \r\n            document.querySelector(this.getAttribute('href')).scrollIntoView({\r\n                behavior: 'smooth'\r\n            });\r\n        });\r\n    });\r\n\r\n    return(\r\n        <div className='productpage'>\r\n            <HeaderBar/>\r\n            <div className='product-page-container'>\r\n                \r\n                <motion.div\r\n                variants={{\r\n                    hidden:{opacity:0, x:-75},\r\n                    visible:{opacity:1, x:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                ref={ref}\r\n                transition={{duration:0.5}}\r\n                >\r\n                    <img src='orangedango.jpg' className='ppage-img'></img>\r\n                </motion.div>\r\n                <motion.div  \r\n                variants={{\r\n                    hidden:{opacity:0, x:75},\r\n                    visible:{opacity:1, x:0},\r\n                }}\r\n                initial='hidden'\r\n                animate={mainControls}\r\n                ref={ref}\r\n                transition={{duration:0.5}}\r\n                className='ppage-description'>\r\n                    <h1 style={{'line-height':'0px'}}>Orange Dango</h1>\r\n                    <p style={{'font-size':'20px'}}>Starting at $5</p>\r\n                    <h3 style={{'padding-top':'50px'}}>Select Set. <a href='#whats-in-box'>What's in the box?</a></h3>\r\n                    <div className='options'>\r\n                        <div\r\n                            className={`option-box ${style.div1 ? 'active' : ''}`}\r\n                            onClick={() => Selected('div1',5)}\r\n                            >\r\n                                <p><b>Single</b></p>\r\n                                <p>$5</p>\r\n                        </div>\r\n                        <div\r\n                            className={`option-box ${style.div2 ? 'active' : ''}`}\r\n                            onClick={() => Selected('div2',10)}\r\n                            >\r\n                                <p><b>Set of 3</b></p>\r\n                                <p>$10</p>\r\n                        </div>\r\n                        <div\r\n                            className={`option-box ${style.div3 ? 'active' : ''}`}\r\n                            onClick={() => Selected('div3',12)}\r\n                            >\r\n                                <p><b>Set of 5</b></p>\r\n                                <p>$12</p>\r\n                        </div>\r\n                        <div\r\n                            className={`option-box ${style.div4 ? 'active' : ''}`}\r\n                            onClick={() => Selected('div4',19)}\r\n                            >\r\n                                <p><b>Luxury Set</b></p>\r\n                                <p>$19</p>\r\n                        </div>\r\n                    </div>\r\n                    <div style={{'display':'grid', 'grid-template-rows':'80% 10% 10%'}}>\r\n                        <div style={{'display':'grid', 'grid-template-rows':'50% 50%','margin-bottom':'10px'}}>\r\n                            \r\n                            <div style={{'display':'flex', 'justify-content':'space-between', 'margin-right':'15%'}}>\r\n                                <h3>Quantity</h3>\r\n                                <div style={{'display':'flex', 'gap':'40px','align-items':'center'}}>\r\n                                    <button className=\"quantity-button\" onClick={() => {DecreaseQuantity()}}>-</button>\r\n                                    <p style={{'text-align':'center'}}>{quantity}</p>\r\n                                    <button className=\"quantity-button\" onClick={() => {IncreaseQuantity()}}>+</button>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{'display':'flex','align-items':'flex-end','justify-content':'flex-end','margin-right':'15%'}}>\r\n                                <p style={{'font-size':'18px'}}><b>Total:</b> ${price}</p>\r\n                            </div>\r\n                        </div>\r\n                        <Link to ='/addToCartPage'>\r\n                            <motion.button whileTap={{ scale: 0.8 }} className={`add-to-cart ${disabled ? 'active' : ''}`} disabled={disabled} onClick={() => {AddItemToCart()}}>Add to Cart</motion.button>\r\n                        </Link>\r\n                    </div>\r\n                    \r\n                </motion.div>\r\n            </div>\r\n            <div className='ppage-marketing' style={{'background-color':'orange'}}>\r\n                    <motion.div \r\n                        variants={{\r\n                            hidden:{opacity:0, x:-75},\r\n                            visible:{opacity:1, x:0},\r\n                        }}\r\n                        initial='hidden'\r\n                        animate={mainControls1}\r\n                        className='ppage-marketing-description'\r\n                        ref={ref1}\r\n                        transition={{duration:0.5}}\r\n                    >\r\n                        <h1>Orange Dango</h1>\r\n                        <h3>Orange.</h3>\r\n                        <p>A sweet and tangy dango that is sure to satisfy your sweet tooth.\r\n                        </p>\r\n                            \r\n                    </motion.div>\r\n                    <motion.div\r\n                        variants={{\r\n                            hidden:{opacity:0, x:75},\r\n                            visible:{opacity:1, x:0},\r\n                        }}\r\n                        initial='hidden'\r\n                        animate={mainControls1}\r\n                        className='ppage-marketing-img'\r\n                        ref={ref1}\r\n                        transition={{duration:0.5}}\r\n                    >\r\n                        <img src='orangedango.jpg' className='ppage-marketing-img'></img>\r\n                    </motion.div>\r\n                    <ScrollToTop/>\r\n            </div>\r\n            <div className='whats-in-box' id='whats-in-box'>\r\n                <motion.div\r\n                    variants={{\r\n                        hidden:{opacity:0, y:75},\r\n                        visible:{opacity:1, y:0},\r\n                    }}\r\n                    initial='hidden'\r\n                    animate={mainControls2}\r\n                    style={{'text-align':'center'}}\r\n                    ref={ref2}\r\n                    transition={{duration:0.5}}\r\n                >\r\n                <h1>What's in the Box?</h1>\r\n                </motion.div>\r\n                <motion.div\r\n                    variants={{\r\n                        hidden:{opacity:0, y:75},\r\n                        visible:{opacity:1, y:0},\r\n                    }}\r\n                    initial='hidden'\r\n                    animate={mainControls2}\r\n                    style={{'display':'grid', 'grid-template-columns':'repeat(4, 1fr)', 'gap':'5%'}}\r\n                    ref={ref2}\r\n                    transition={{duration:0.5, delay:0.25}}\r\n                >\r\n                    <div>\r\n                        <h3>Single</h3>\r\n                        <ul>\r\n                            <li>1x Classic Orange Dango</li>\r\n                            <li>Basic Packaging</li>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                    <div>\r\n                        <h3>Set of 3</h3>\r\n                        <ul>\r\n                            <li>3x Classic Orange Dango</li>\r\n                            <li>Basic Packaging signed by the Chef</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3>Set of 5</h3>\r\n                        <ul>\r\n                            <li>5x Classic Orange Dango</li>\r\n                            <li>Basic Packaging signed by the Chef</li>\r\n                            <li>2x Fresh shots of Orange Juice</li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <h3>Luxury Set</h3>\r\n                        <ul>\r\n                            <li>1x Classic Orange Dango</li>\r\n                            <li>1x Specialized Orange-Crush Dango</li>\r\n                            <li>1x Mystery Orange Dango Variation</li>\r\n                            <li>3x Fresh shots of Orange Juice</li>\r\n                            <li>Luxurious Packaging autographed by the Chef</li>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                </motion.div>\r\n            </div>\r\n            <ScrollToTop/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default OrangePage;","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\order.js",["168"],[],"import React, {useContext} from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { motion, useMotionValue, useTransform } from \"framer-motion\"\r\nimport \"./App.css\"\r\nimport \"./AddCartCSS.css\"\r\nimport HeaderBar from \"./header\"\r\nimport {Link} from \"react-router-dom\";\r\nimport {ShopContext} from './shop-context';\r\n\r\nfunction CircularProgress({ progress }) {\r\n  const circleLength = useTransform(progress, [0, 100], [0, 1])\r\n  const checkmarkPathLength = useTransform(progress, [0, 95, 100], [0, 0, 1])\r\n  const circleColor = useTransform(\r\n    progress,\r\n    [0, 95, 100],\r\n    [\"#FFCC66\", \"#FFCC66\", \"#66BB66\"]\r\n  )\r\n\r\n  return (\r\n    <motion.svg\r\n      xmlns=\"http://www.w3.org/2000/svg\"\r\n      width=\"258\"\r\n      height=\"258\"\r\n      viewBox=\"0 0 258 258\"\r\n    >\r\n      {/* Check mark  */}\r\n      <motion.path\r\n        transform=\"translate(60 85)\"\r\n        d=\"M3 50L45 92L134 3\"\r\n        fill=\"transparent\"\r\n        stroke=\"#7BB86F\"\r\n        strokeWidth={8}\r\n        style={{ pathLength: checkmarkPathLength }}\r\n      />\r\n      {/* Circle */}\r\n      <motion.path\r\n        d=\"M 130 6 C 198.483 6 254 61.517 254 130 C 254 198.483 198.483 254 130 254 C 61.517 254 6 198.483 6 130 C 6 61.517 61.517 6 130 6 Z\"\r\n        fill=\"transparent\"\r\n        strokeWidth=\"8\"\r\n        stroke={circleColor}\r\n        style={{\r\n          pathLength: circleLength\r\n        }}\r\n      />\r\n    </motion.svg>\r\n  )\r\n}\r\n\r\nconst DeliveryInfo = () => {\r\n    function getCurrentDate(separator='/'){\r\n\r\n        let newDate = new Date()\r\n        let date = newDate.getDate()+7;\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        \r\n        return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date<10?`0${date}`:`${date}`}`\r\n    }\r\n\r\n    return(\r\n        <p>Est. Delivery Date: {getCurrentDate()}</p>\r\n    )\r\n}\r\n\r\nconst PickupInfo = () => {\r\n    function getCurrentDate(separator='/'){\r\n\r\n        let newDate = new Date()\r\n        let date = newDate.getDate()+7;\r\n        let month = newDate.getMonth() + 1;\r\n        let year = newDate.getFullYear();\r\n        \r\n        return `${year}${separator}${month<10?`0${month}`:`${month}`}${separator}${date<10?`0${date}`:`${date}`}`\r\n    }\r\n    return(\r\n        <p>Pickup Date: {getCurrentDate()} at <b>299 Brambling Way</b></p>\r\n    )\r\n}\r\n\r\nexport function OrderPage() {\r\n  let progress = useMotionValue(90)\r\n  let d;\r\n\r\n  const {deliveryState} = useContext(ShopContext);\r\n\r\n  \r\n\r\n    if(deliveryState){\r\n        d = <DeliveryInfo/>\r\n    }else{\r\n        d = <PickupInfo/>\r\n    }\r\n\r\n\r\n  return (\r\n    <div className=\"CartAddPage-container\">\r\n        <HeaderBar/>\r\n        <div className=\"CartAddPage\">\r\n            <motion.div\r\n                initial={{ x: 0 }}\r\n                animate={{ x: 100 }}\r\n                style={{ x: progress }}\r\n                transition={{ duration: 0.5 }}\r\n            />\r\n            <CircularProgress progress={progress} />\r\n            <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1, delay:0.75}}>\r\n                <h1>Order Placed!</h1>\r\n            </motion.div>\r\n            <motion.div animate={{opacity:1}} initial={{opacity:0}} transition={{type:'tween', duration: 1, delay:1}}>\r\n                {d}\r\n            </motion.div>\r\n            <motion.div \r\n                animate={{opacity:1}} \r\n                initial={{opacity:0}} \r\n                transition={{type:'tween', duration: 1, delay:1.25}}\r\n                className=\"CartAddPage-buttons-container\"\r\n            >   \r\n                <Link to='/'>\r\n                  <button className=\"CartAddPage-button\" style={{'background-color':'rgb(6, 85, 255)','color':'white'}}>Continue Shopping</button>\r\n                </Link>\r\n            </motion.div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OrderPage;","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\header.js",["169"],[],"import React, {useContext} from 'react';\r\nimport './App.css';\r\nimport { Link } from \"react-router-dom\";\r\nimport {ShopContext} from './shop-context';\r\n\r\nfunction HeaderBar(){\r\n\r\n    const {CartLength}= useContext(ShopContext);\r\n    \r\n    return(\r\n        <div className=\"header\">\r\n            <div className=\"Title\">\r\n                <Link to=\"/\" style={{'text-decoration':'none', 'color':'Black'}}>\r\n                    <h1>Dango!</h1>\r\n                </Link>\r\n            </div>\r\n            <div style={{'position':'relative'}}>\r\n                <Link to={'/cart'}>\r\n                    <img src=\"icons8-shopping-bag-50.png\" className=\"cart-icon\"></img>\r\n                    <p className='cart-qty-num'>{CartLength}</p>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    );          \r\n}\r\n\r\nexport default HeaderBar;","C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\scroll-to-top.js",[],[],"C:\\Users\\raymo\\Documents\\Coding-Programs\\ReactApps\\first-react-app\\DangoStoreDemo\\src\\slideshow.js",["170","171","172"],[],"import React from 'react';\r\nimport './App.css';\r\nimport { Link } from 'react-router-dom';\r\nimport { motion } from 'framer-motion';\r\n\r\nconst slidePics = [\"starwberrydango.jpg /strawberryPage\", \"orangedango.jpg /orangePage\", \"shibaDango.jpg /shibaPage\"];\r\nconst dotColors = [];\r\nconst delay = 3000;\r\n\r\nfunction Slideshow() {\r\n  const [index, setIndex] = React.useState(0);\r\n  const timeoutRef = React.useRef(null);\r\n\r\n  function resetTimeout() {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n  }\r\n\r\n  function IDsource(source, type){\r\n    const myArray = source.split(\" \");\r\n    if(type == '1'){\r\n      return myArray[0];\r\n    }else{\r\n      return myArray[1];\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    resetTimeout();\r\n    timeoutRef.current = setTimeout(\r\n      () =>\r\n        setIndex((prevIndex) =>\r\n          prevIndex === slidePics.length - 1 ? 0 : prevIndex + 1\r\n        ),\r\n      delay\r\n    );\r\n\r\n    return () => {\r\n      resetTimeout();\r\n    };\r\n  }, [index]);\r\n\r\n  return (\r\n    <div className=\"featured\">\r\n      <div className=\"slideshow\">\r\n        <div\r\n          className=\"slideshowSlider\"\r\n          style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}\r\n        >\r\n          {slidePics.map((source, index) => (\r\n            <div\r\n              className=\"slide\"\r\n              key={index}\r\n            > <motion.div whileHover={{ scale:0.95}}>\r\n                <Link to={IDsource(source, 2)}>\r\n                  <img src={IDsource(source, 1)} className=\"slide-img\" ></img>\r\n                </Link>\r\n              </motion.div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"slideshowDots\">\r\n          {slidePics.map((_, idx) => (\r\n            <div\r\n              key={idx}\r\n              className={`slideshowDot${index === idx ? \" active\" : \"\"}`}\r\n              onClick={() => {\r\n                setIndex(idx);\r\n              }}\r\n            ></div>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slideshow;",{"ruleId":"173","severity":1,"message":"174","line":10,"column":8,"nodeType":"175","messageId":"176","endLine":10,"endColumn":16},{"ruleId":"173","severity":1,"message":"177","line":1,"column":8,"nodeType":"175","messageId":"176","endLine":1,"endColumn":12},{"ruleId":"173","severity":1,"message":"178","line":1,"column":16,"nodeType":"175","messageId":"176","endLine":1,"endColumn":22},{"ruleId":"173","severity":1,"message":"179","line":11,"column":48,"nodeType":"175","messageId":"176","endLine":11,"endColumn":67},{"ruleId":"180","severity":1,"message":"181","line":28,"column":17,"nodeType":"182","endLine":28,"endColumn":69},{"ruleId":"183","severity":1,"message":"184","line":118,"column":8,"nodeType":"185","endLine":118,"endColumn":35,"suggestions":"186"},{"ruleId":"173","severity":1,"message":"178","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":33},{"ruleId":"180","severity":1,"message":"181","line":14,"column":17,"nodeType":"182","endLine":14,"endColumn":65},{"ruleId":"173","severity":1,"message":"187","line":7,"column":32,"nodeType":"175","messageId":"176","endLine":7,"endColumn":46},{"ruleId":"173","severity":1,"message":"188","line":7,"column":48,"nodeType":"175","messageId":"176","endLine":7,"endColumn":60},{"ruleId":"173","severity":1,"message":"189","line":8,"column":9,"nodeType":"175","messageId":"176","endLine":8,"endColumn":21},{"ruleId":"173","severity":1,"message":"190","line":8,"column":23,"nodeType":"175","messageId":"176","endLine":8,"endColumn":41},{"ruleId":"173","severity":1,"message":"191","line":23,"column":12,"nodeType":"175","messageId":"176","endLine":23,"endColumn":18},{"ruleId":"183","severity":1,"message":"192","line":104,"column":8,"nodeType":"185","endLine":104,"endColumn":18,"suggestions":"193"},{"ruleId":"180","severity":1,"message":"181","line":173,"column":21,"nodeType":"182","endLine":173,"endColumn":74},{"ruleId":"180","severity":1,"message":"181","line":271,"column":25,"nodeType":"182","endLine":271,"endColumn":88},{"ruleId":"183","severity":1,"message":"194","line":21,"column":8,"nodeType":"185","endLine":21,"endColumn":19,"suggestions":"195"},{"ruleId":"173","severity":1,"message":"178","line":1,"column":16,"nodeType":"175","messageId":"176","endLine":1,"endColumn":22},{"ruleId":"173","severity":1,"message":"196","line":9,"column":7,"nodeType":"175","messageId":"176","endLine":9,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":16,"column":13,"nodeType":"182","endLine":16,"endColumn":64},{"ruleId":"180","severity":1,"message":"181","line":31,"column":13,"nodeType":"182","endLine":31,"endColumn":64},{"ruleId":"173","severity":1,"message":"197","line":42,"column":12,"nodeType":"175","messageId":"176","endLine":42,"endColumn":15},{"ruleId":"173","severity":1,"message":"178","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":33},{"ruleId":"180","severity":1,"message":"181","line":14,"column":17,"nodeType":"182","endLine":14,"endColumn":65},{"ruleId":"173","severity":1,"message":"178","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":33},{"ruleId":"180","severity":1,"message":"181","line":14,"column":17,"nodeType":"182","endLine":14,"endColumn":65},{"ruleId":"173","severity":1,"message":"178","line":1,"column":16,"nodeType":"175","messageId":"176","endLine":1,"endColumn":22},{"ruleId":"173","severity":1,"message":"198","line":14,"column":18,"nodeType":"175","messageId":"176","endLine":14,"endColumn":26},{"ruleId":"173","severity":1,"message":"199","line":57,"column":12,"nodeType":"175","messageId":"176","endLine":57,"endColumn":28},{"ruleId":"173","severity":1,"message":"200","line":57,"column":30,"nodeType":"175","messageId":"176","endLine":57,"endColumn":46},{"ruleId":"173","severity":1,"message":"179","line":57,"column":48,"nodeType":"175","messageId":"176","endLine":57,"endColumn":67},{"ruleId":"173","severity":1,"message":"201","line":57,"column":69,"nodeType":"175","messageId":"176","endLine":57,"endColumn":83},{"ruleId":"180","severity":1,"message":"181","line":62,"column":17,"nodeType":"182","endLine":62,"endColumn":70},{"ruleId":"183","severity":1,"message":"202","line":98,"column":17,"nodeType":"203","endLine":98,"endColumn":28},{"ruleId":"173","severity":1,"message":"178","line":1,"column":27,"nodeType":"175","messageId":"176","endLine":1,"endColumn":33},{"ruleId":"180","severity":1,"message":"181","line":14,"column":17,"nodeType":"182","endLine":14,"endColumn":65},{"ruleId":"173","severity":1,"message":"204","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"180","severity":1,"message":"181","line":75,"column":17,"nodeType":"182","endLine":81,"endColumn":22},{"ruleId":"173","severity":1,"message":"187","line":7,"column":32,"nodeType":"175","messageId":"176","endLine":7,"endColumn":46},{"ruleId":"173","severity":1,"message":"188","line":7,"column":48,"nodeType":"175","messageId":"176","endLine":7,"endColumn":60},{"ruleId":"173","severity":1,"message":"189","line":8,"column":9,"nodeType":"175","messageId":"176","endLine":8,"endColumn":21},{"ruleId":"173","severity":1,"message":"190","line":8,"column":23,"nodeType":"175","messageId":"176","endLine":8,"endColumn":41},{"ruleId":"173","severity":1,"message":"191","line":23,"column":12,"nodeType":"175","messageId":"176","endLine":23,"endColumn":18},{"ruleId":"183","severity":1,"message":"192","line":104,"column":8,"nodeType":"185","endLine":104,"endColumn":18,"suggestions":"205"},{"ruleId":"180","severity":1,"message":"181","line":173,"column":21,"nodeType":"182","endLine":173,"endColumn":69},{"ruleId":"180","severity":1,"message":"181","line":269,"column":25,"nodeType":"182","endLine":269,"endColumn":83},{"ruleId":"173","severity":1,"message":"187","line":7,"column":32,"nodeType":"175","messageId":"176","endLine":7,"endColumn":46},{"ruleId":"173","severity":1,"message":"188","line":7,"column":48,"nodeType":"175","messageId":"176","endLine":7,"endColumn":60},{"ruleId":"173","severity":1,"message":"189","line":8,"column":9,"nodeType":"175","messageId":"176","endLine":8,"endColumn":21},{"ruleId":"173","severity":1,"message":"190","line":8,"column":23,"nodeType":"175","messageId":"176","endLine":8,"endColumn":41},{"ruleId":"173","severity":1,"message":"191","line":23,"column":12,"nodeType":"175","messageId":"176","endLine":23,"endColumn":18},{"ruleId":"183","severity":1,"message":"192","line":104,"column":8,"nodeType":"185","endLine":104,"endColumn":18,"suggestions":"206"},{"ruleId":"180","severity":1,"message":"181","line":173,"column":21,"nodeType":"182","endLine":173,"endColumn":70},{"ruleId":"180","severity":1,"message":"181","line":269,"column":25,"nodeType":"182","endLine":269,"endColumn":84},{"ruleId":"173","severity":1,"message":"204","line":2,"column":8,"nodeType":"175","messageId":"176","endLine":2,"endColumn":16},{"ruleId":"180","severity":1,"message":"181","line":19,"column":21,"nodeType":"182","endLine":19,"endColumn":81},{"ruleId":"173","severity":1,"message":"207","line":7,"column":7,"nodeType":"175","messageId":"176","endLine":7,"endColumn":16},{"ruleId":"208","severity":1,"message":"209","line":22,"column":13,"nodeType":"210","messageId":"211","endLine":22,"endColumn":15},{"ruleId":"180","severity":1,"message":"181","line":57,"column":19,"nodeType":"182","endLine":57,"endColumn":73},"no-unused-vars","'homePage' is defined but never used.","Identifier","unusedVar","'logo' is defined but never used.","'useRef' is defined but never used.","'calculateTotalPrice' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'cartItems.length'. Either include it or remove the dependency array.","ArrayExpression",["212"],"'useMotionValue' is defined but never used.","'useTransform' is defined but never used.","'cartQuantity' is defined but never used.","'changeCartQuantity' is defined but never used.","'itemId' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'changePrice'. Either include it or remove the dependency array.",["213"],"React Hook useEffect has a missing dependency: 'calculateTotalPrice'. Either include it or remove the dependency array.",["214"],"'products' is assigned a value but never used.","'ref' is assigned a value but never used.","'setError' is assigned a value but never used.","'DecreaseQuantity' is assigned a value but never used.","'IncreaseQuantity' is assigned a value but never used.","'RemoveFromCart' is assigned a value but never used.","Assignments to the 'd' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","JSXElement","'ReactDOM' is defined but never used.",["215"],["216"],"'dotColors' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"219","fix":"223"},{"desc":"219","fix":"224"},"Update the dependencies array to be: [TotalPrice, cartItems.length, deliveryPrice]",{"range":"225","text":"226"},"Update the dependencies array to be: [changePrice, quantity]",{"range":"227","text":"228"},"Update the dependencies array to be: [calculateTotalPrice, cartItems]",{"range":"229","text":"230"},{"range":"231","text":"228"},{"range":"232","text":"228"},[3974,4001],"[TotalPrice, cartItems.length, deliveryPrice]",[3055,3065],"[changePrice, quantity]",[813,824],"[calculateTotalPrice, cartItems]",[3044,3054],[3046,3056]]