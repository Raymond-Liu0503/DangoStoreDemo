{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\raymo\\\\Documents\\\\Coding-Programs\\\\ReactApps\\\\first-react-app\\\\src\\\\slideshow.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\nconst delay = 2500;\nfunction Slideshow() {\n  _s();\n  const [index, setIndex] = React.useState(0);\n  const timeoutRef = React.useRef(null);\n  function resetTimeout() {\n    if (timeoutRef.current) {\n      clearTimeout(timeoutRef.current);\n    }\n  }\n  React.useEffect(() => {\n    resetTimeout();\n    timeoutRef.current = setTimeout(() => setIndex(prevIndex => prevIndex === colors.length - 1 ? 0 : prevIndex + 1), delay);\n    return () => {\n      resetTimeout();\n    };\n  }, [index]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"slideshow\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideshowSlider\",\n      style: {\n        transform: `translate3d(${-index * 100}%, 0, 0)`\n      },\n      children: colors.map((backgroundColor, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"slide\",\n        style: {\n          backgroundColor\n        },\n        children: \" \"\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"slideshowDots\",\n      children: colors.map((_, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `slideshowDot${index === idx ? \" active\" : \"\"}`,\n        onClick: () => {\n          setIndex(idx);\n        }\n      }, idx, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Slideshow, \"bhtDMAuiTWjY/oCsgWcgDfz/cnA=\");\n_c = Slideshow;\nexport default Slideshow;\nvar _c;\n$RefreshReg$(_c, \"Slideshow\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","colors","delay","Slideshow","_s","index","setIndex","useState","timeoutRef","useRef","resetTimeout","current","clearTimeout","useEffect","setTimeout","prevIndex","length","className","children","style","transform","map","backgroundColor","fileName","_jsxFileName","lineNumber","columnNumber","_","idx","onClick","_c","$RefreshReg$"],"sources":["C:/Users/raymo/Documents/Coding-Programs/ReactApps/first-react-app/src/slideshow.js"],"sourcesContent":["import React from 'react';\r\nimport './App.css';\r\n\r\nconst colors = [\"#0088FE\", \"#00C49F\", \"#FFBB28\"];\r\nconst delay = 2500;\r\n\r\nfunction Slideshow() {\r\n  const [index, setIndex] = React.useState(0);\r\n  const timeoutRef = React.useRef(null);\r\n\r\n  function resetTimeout() {\r\n    if (timeoutRef.current) {\r\n      clearTimeout(timeoutRef.current);\r\n    }\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    resetTimeout();\r\n    timeoutRef.current = setTimeout(\r\n      () =>\r\n        setIndex((prevIndex) =>\r\n          prevIndex === colors.length - 1 ? 0 : prevIndex + 1\r\n        ),\r\n      delay\r\n    );\r\n\r\n    return () => {\r\n      resetTimeout();\r\n    };\r\n  }, [index]);\r\n\r\n  return (\r\n    <div className=\"slideshow\">\r\n      <div\r\n        className=\"slideshowSlider\"\r\n        style={{ transform: `translate3d(${-index * 100}%, 0, 0)` }}\r\n      >\r\n        {colors.map((backgroundColor, index) => (\r\n          <div\r\n            className=\"slide\"\r\n            key={index}\r\n            style={{ backgroundColor }}\r\n          > </div>\r\n        ))}\r\n      </div>\r\n\r\n      <div className=\"slideshowDots\">\r\n        {colors.map((_, idx) => (\r\n          <div\r\n            key={idx}\r\n            className={`slideshowDot${index === idx ? \" active\" : \"\"}`}\r\n            onClick={() => {\r\n              setIndex(idx);\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Slideshow;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,CAAC;AAChD,MAAMC,KAAK,GAAG,IAAI;AAElB,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,KAAK,CAACS,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAMC,UAAU,GAAGV,KAAK,CAACW,MAAM,CAAC,IAAI,CAAC;EAErC,SAASC,YAAYA,CAAA,EAAG;IACtB,IAAIF,UAAU,CAACG,OAAO,EAAE;MACtBC,YAAY,CAACJ,UAAU,CAACG,OAAO,CAAC;IAClC;EACF;EAEAb,KAAK,CAACe,SAAS,CAAC,MAAM;IACpBH,YAAY,CAAC,CAAC;IACdF,UAAU,CAACG,OAAO,GAAGG,UAAU,CAC7B,MACER,QAAQ,CAAES,SAAS,IACjBA,SAAS,KAAKd,MAAM,CAACe,MAAM,GAAG,CAAC,GAAG,CAAC,GAAGD,SAAS,GAAG,CACpD,CAAC,EACHb,KACF,CAAC;IAED,OAAO,MAAM;MACXQ,YAAY,CAAC,CAAC;IAChB,CAAC;EACH,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAEX,oBACEL,OAAA;IAAKiB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBlB,OAAA;MACEiB,SAAS,EAAC,iBAAiB;MAC3BE,KAAK,EAAE;QAAEC,SAAS,EAAG,eAAc,CAACf,KAAK,GAAG,GAAI;MAAU,CAAE;MAAAa,QAAA,EAE3DjB,MAAM,CAACoB,GAAG,CAAC,CAACC,eAAe,EAAEjB,KAAK,kBACjCL,OAAA;QACEiB,SAAS,EAAC,OAAO;QAEjBE,KAAK,EAAE;UAAEG;QAAgB,CAAE;QAAAJ,QAAA,EAC5B;MAAC,GAFKb,KAAK;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEL,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAEN1B,OAAA;MAAKiB,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC3BjB,MAAM,CAACoB,GAAG,CAAC,CAACM,CAAC,EAAEC,GAAG,kBACjB5B,OAAA;QAEEiB,SAAS,EAAG,eAAcZ,KAAK,KAAKuB,GAAG,GAAG,SAAS,GAAG,EAAG,EAAE;QAC3DC,OAAO,EAAEA,CAAA,KAAM;UACbvB,QAAQ,CAACsB,GAAG,CAAC;QACf;MAAE,GAJGA,GAAG;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKJ,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACtB,EAAA,CArDQD,SAAS;AAAA2B,EAAA,GAAT3B,SAAS;AAuDlB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}